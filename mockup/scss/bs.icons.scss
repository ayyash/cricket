// create the font for icons, and mixins
@font-face {
    font-family: $icon-font;
    src: url("#{$fonts-url}#{$icon-font}.woff?v=#{$icon-version}") format("woff"),
    url("#{$fonts-url}#{$icon-font}.ttf?v=#{$icon-version}") format("truetype"),
    url("#{$fonts-url}#{$icon-font}.svg?v=#{$icon-version}") format("svg");
    font-weight: normal;
    font-style: normal;
}

@mixin iconDef() {
    display: inline-block; 
    font-family: $icon-font;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    font-size: 1.3rem;
    line-height: 1.3;
    vertical-align: -9%;
    speak: none;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    /* Enable Ligatures */
    letter-spacing: 0;
    -webkit-font-feature-settings: "liga";
    -moz-font-feature-settings: "liga=1";
    -moz-font-feature-settings: "liga";
    -ms-font-feature-settings: "liga" 1;
    -o-font-feature-settings: "liga";
    font-feature-settings: "liga";
    -webkit-font-variant-ligatures: discretionary-ligatures;
    font-variant-ligatures: discretionary-ligatures;
    content: attr(data-icon);
}

i.icon-liga {
    @include iconDef();
}

// to use in HTML
.icon {
    &:before {
        @include iconDef();
    }
}


// to place the content only
@mixin displayIcon($value) {
    content: $value;
    font-family: $icon-font;
}

// to use in CSS
@mixin getIcon($value) {
    @extend .icon;
    &:before {
        content: $value;
    }
}

// to lightly use in CSS
@mixin changeIcon($value) {
    &:before {
        content: $value;
    }
}


// larger
.icon-lg {
    &:before {
        font-size: (4rem / 3);
        line-height: (3rem / 4);
        vertical-align: -15%;
    }
}

// for sass
@mixin generateIcon($name, $value) {
    .#{$name} {
        &:before {
            content: $value;
        }
    }
}

// gulp generate variables, do not map this, for intellisense to work
// the first is a varaible to be used dirctly with getIcon, the second is a rule to be used in HTML

// inject:icons
$icon-cert: "\e914";	@include generateIcon(icon-cert,$icon-cert);
$icon-employee: "\e915";	@include generateIcon(icon-employee,$icon-employee);
$icon-image: "\e918";	@include generateIcon(icon-image,$icon-image);
$icon-notification: "\e91b";	@include generateIcon(icon-notification,$icon-notification);
$icon-resource: "\e91c";	@include generateIcon(icon-resource,$icon-resource);
$icon-service: "\e91d";	@include generateIcon(icon-service,$icon-service);
$icon-tnc: "\e91e";	@include generateIcon(icon-tnc,$icon-tnc);
$icon-addon: "\e920";	@include generateIcon(icon-addon,$icon-addon);
$icon-entity: "\e921";	@include generateIcon(icon-entity,$icon-entity);
$icon-clock: "\e900";	@include generateIcon(icon-clock,$icon-clock);
$icon-trash: "\e901";	@include generateIcon(icon-trash,$icon-trash);
$icon-pencil: "\e902";	@include generateIcon(icon-pencil,$icon-pencil);
$icon-eye-off: "\e904";	@include generateIcon(icon-eye-off,$icon-eye-off);
$icon-eye: "\e913";	@include generateIcon(icon-eye,$icon-eye);
$icon-bell: "\e92d";	@include generateIcon(icon-bell,$icon-bell);
$icon-arrow-bottom-right: "\e92b";	@include generateIcon(icon-arrow-bottom-right,$icon-arrow-bottom-right);
$icon-arrow-top-right: "\e92c";	@include generateIcon(icon-arrow-top-right,$icon-arrow-top-right);
$icon-search: "\e92a";	@include generateIcon(icon-search,$icon-search);
$icon-milestone: "\e927";	@include generateIcon(icon-milestone,$icon-milestone);
$icon-pers: "\e91f";	@include generateIcon(icon-pers,$icon-pers);
$icon-theme: "\e922";	@include generateIcon(icon-theme,$icon-theme);
$icon-user-circle: "\e91a";	@include generateIcon(icon-user-circle,$icon-user-circle);
$icon-filter: "\e919";	@include generateIcon(icon-filter,$icon-filter);
$icon-cog: "\e917";	@include generateIcon(icon-cog,$icon-cog);
$icon-login: "\e879";	@include generateIcon(icon-login,$icon-login);
$icon-star-off: "\e903";	@include generateIcon(icon-star-off,$icon-star-off);
$icon-plus: "\e909";	@include generateIcon(icon-plus,$icon-plus);
$icon-ellipses: "\e90a";	@include generateIcon(icon-ellipses,$icon-ellipses);
$icon-ellipses-vertical: "\e90b";	@include generateIcon(icon-ellipses-vertical,$icon-ellipses-vertical);
$icon-star-empty: "\e90d";	@include generateIcon(icon-star-empty,$icon-star-empty);
$icon-star: "\e90e";	@include generateIcon(icon-star,$icon-star);
$icon-arrow-down: "\e90f";	@include generateIcon(icon-arrow-down,$icon-arrow-down);
$icon-arrow-left: "\e910";	@include generateIcon(icon-arrow-left,$icon-arrow-left);
$icon-arrow-right: "\e911";	@include generateIcon(icon-arrow-right,$icon-arrow-right);
$icon-arrow-up: "\e912";	@include generateIcon(icon-arrow-up,$icon-arrow-up);
$icon-flag: "\e153";	@include generateIcon(icon-flag,$icon-flag);
$icon-tick: "\e5ca";	@include generateIcon(icon-tick,$icon-tick);
$icon-x: "\e5cd";	@include generateIcon(icon-x,$icon-x);
$icon-info: "\e88e";	@include generateIcon(icon-info,$icon-info);
$icon-external: "\e89e";	@include generateIcon(icon-external,$icon-external);
$icon-menu: "\e916";	@include generateIcon(icon-menu,$icon-menu);
$icon-chevron-down: "\e905";	@include generateIcon(icon-chevron-down,$icon-chevron-down);
$icon-chevron-left: "\e906";	@include generateIcon(icon-chevron-left,$icon-chevron-left);
$icon-chevron-right: "\e907";	@include generateIcon(icon-chevron-right,$icon-chevron-right);
$icon-chevron-up: "\e908";	@include generateIcon(icon-chevron-up,$icon-chevron-up);
$icon-exclamation: "\e90c";	@include generateIcon(icon-exclamation,$icon-exclamation);

// endinject
